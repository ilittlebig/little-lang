fn array_params(int int_array[], string string_array[6]) : void {
	(printf "%i\n" int_array[0])
	(printf "%i\n" int_array[1])
	(printf "%i\n" int_array[2])
	(printf "%i\n" int_array[3])
	(printf "%i\n" int_array[4])
	(printf "%i\n" int_array[5])
	(printf "%i\n" int_array[6])
	(printf "%i\n" int_array[7])
	(printf "%i\n" int_array[8])
	(printf "%i\n" int_array[9])

	(printf "%s" string_array[0])
	(printf "%s" string_array[1])
	(printf "%s" string_array[2])
	(printf "%s" string_array[3])
	(printf "%s" string_array[4])
	(printf "%s" string_array[5])

	int : (= index 5)
	(= int_array[index] 120)
	(printf "%i\n" int_array[index])
	(printf "%i\n" int_array[5])

	int : (= assign_to_array1 int_array[index])
	int : (= assign_to_array2 int_array[5])
	(printf "%i\n" assign_to_array1)
	(printf "%i\n" assign_to_array2)

	(= index 4)
	(= string_array[index] "World Hello\n")
	(printf "%s" string_array[index])
	(printf "%s" string_array[4])
	(= index 5)
	(= string_array[index] "Hi\n")
	(printf "%s" string_array[index])
	(printf "%s" string_array[5])

	int : (= a int_array[0])
	if (== a 10) {
		(printf "%s" "abc\n")
	}

	(= a int_array[1])
	if (== a 20) {
		(printf "%s" "abc\n")
	}
}

fn ret_array_elem() : string {
	string : (= a[6] ("H" "e" "l" "l" "i like dogs\n" "\n"))
	int : (= ii 4)
	(return a[ii])
}

fn main() : void {
	int : (= int_array[] (10 20 30 40 50 60 70 80 90 100))
	(printf "%i\n" int_array[0])
	(printf "%i\n" int_array[1])
	(printf "%i\n" int_array[2])
	(printf "%i\n" int_array[3])
	(printf "%i\n" int_array[4])
	(printf "%i\n" int_array[5])
	(printf "%i\n" int_array[6])
	(printf "%i\n" int_array[7])
	(printf "%i\n" int_array[8])
	(printf "%i\n" int_array[9])

	string : (= string_array[6] ("H" "e" "l" "l" "o" "\n"))
	(printf "%s" string_array[0])
	(printf "%s" string_array[1])
	(printf "%s" string_array[2])
	(printf "%s" string_array[3])
	(printf "%s" string_array[4])
	(printf "%s" string_array[5])

	int : (= index 5)
	(= int_array[index] 120)
	(printf "%i\n" int_array[index])
	(printf "%i\n" int_array[5])

	int : (= assign_to_array1 int_array[index])
	int : (= assign_to_array2 int_array[5])
	(printf "%i\n" assign_to_array1)
	(printf "%i\n" assign_to_array2)

	(= index 4)
	(= string_array[index] "Hello World\n")
	(printf "%s" string_array[index])
	(printf "%s" string_array[4])

	int : (= a int_array[0])
	if (== a 10) {
		(printf "%s" "abc\n")
	}

	(= a int_array[1])
	if (== a 20) {
		(printf "%s" "abc\n")
	}

	(array_params int_array string_array)

	/* TODO: Returning arrays is not possible as of now, but
	   single elements are returnable. */
	(defvar array_elem (ret_array_elem))
	(printf "%s" array_elem)
}
